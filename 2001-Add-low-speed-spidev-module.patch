From e1a8e17199386b105c20eaf891afe1c8a122accc Mon Sep 17 00:00:00 2001
From: Mario Carrillo <mario.alfredo.c.arevalo@intel.com>
Date: Sat, 10 Oct 2015 11:38:35 -0500
Subject: [PATCH 2001/2003] Add low-speed-spidev module

Signed-off-by: Mario Carrillo <mario.alfredo.c.arevalo@intel.com>
---
 drivers/Makefile                        |  1 +
 drivers/spi/lsspidev/Makefile           |  5 +++
 drivers/spi/lsspidev/low-speed-spidev.c | 79 +++++++++++++++++++++++++++++++++
 3 files changed, 85 insertions(+)
 create mode 100644 drivers/spi/lsspidev/Makefile
 create mode 100644 drivers/spi/lsspidev/low-speed-spidev.c

diff --git a/drivers/Makefile b/drivers/Makefile
index 7209950..3a8b62e 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -7,6 +7,7 @@
 
 obj-y				+= irqchip/
 obj-y				+= bus/
+obj-y				+= spi/lsspidev/
 
 obj-$(CONFIG_GENERIC_PHY)	+= phy/
 
diff --git a/drivers/spi/lsspidev/Makefile b/drivers/spi/lsspidev/Makefile
new file mode 100644
index 0000000..5a88e9a
--- /dev/null
+++ b/drivers/spi/lsspidev/Makefile
@@ -0,0 +1,5 @@
+#
+# Makefile for low-speed-spidev module
+#
+
+obj-y				+= low-speed-spidev.o
diff --git a/drivers/spi/lsspidev/low-speed-spidev.c b/drivers/spi/lsspidev/low-speed-spidev.c
new file mode 100644
index 0000000..9bdb9ff
--- /dev/null
+++ b/drivers/spi/lsspidev/low-speed-spidev.c
@@ -0,0 +1,79 @@
+/*
+ * low-speed-spidev board file
+ * Copyright (c) 2014, Intel Corporation.
+ * All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * Author: California Sullivan <california.l.sullivan@intel.com>
+ */
+
+#define pr_fmt(fmt) "low-speed-spidev: " fmt
+
+#include <linux/platform_device.h>
+#include <linux/module.h>
+#include <linux/spi/spi.h>
+
+#if (!defined(CONFIG_SPI_SPIDEV_MODULE) && !defined(CONFIG_SPI_SPIDEV))
+        #error SPI_SPIDEV is required.
+#endif
+
+/* Change these values to what your board uses. */
+#define LOW_SPEED_SPIDEV_SPI_BUS 0
+#define LOW_SPEED_SPIDEV_SPI_CS 0
+#define LOW_SPEED_SPIDEV_MAX_CLK_HZ 1000000
+
+static struct spi_board_info cal_spi_board_info __initdata = {
+	.modalias	= "spidev",
+	.bus_num	= LOW_SPEED_SPIDEV_SPI_BUS,
+	.chip_select	= LOW_SPEED_SPIDEV_SPI_CS,
+	.max_speed_hz   = LOW_SPEED_SPIDEV_MAX_CLK_HZ,
+};
+
+static struct spi_device *dev;
+
+static int __init low_speed_spidev_module_init(void)
+{
+	struct spi_master *master;
+	int err;
+
+	pr_info("module init\n");
+
+	err = -ENODEV;
+
+	master = spi_busnum_to_master(LOW_SPEED_SPIDEV_SPI_BUS);
+	pr_info("master=%p\n", master);
+	if (!master)
+		goto out;
+
+	dev = spi_new_device(master, &cal_spi_board_info);
+	pr_info("dev=%p\n", dev);
+	if (!dev)
+		goto out;
+	pr_info("spidev registered\n");
+	err = 0;
+
+ out:
+	if (err)
+		pr_err("Failed to register SPI device\n");
+	return err;
+}
+
+static void __exit low_speed_spidev_module_exit(void)
+{
+	pr_info("module exit");
+	if (dev)
+		spi_unregister_device(dev);
+}
+
+module_init(low_speed_spidev_module_init);
+module_exit(low_speed_spidev_module_exit);
+
+MODULE_LICENSE("GPL");
-- 
2.9.1

